<?php

namespace ContainerKz8IBYf;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_AfaAD9_Service extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.AfaAD9.' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.AfaAD9.'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\AnalyseController::analyseAll' => ['privates', '.service_locator.vRUAr7Q', 'get_ServiceLocator_VRUAr7QService', true],
            'App\\Controller\\AnalyseController::analyseOne' => ['privates', '.service_locator.vRUAr7Q', 'get_ServiceLocator_VRUAr7QService', true],
            'App\\Controller\\BrandController::index' => ['privates', '.service_locator.nMP20_1', 'get_ServiceLocator_NMP201Service', true],
            'App\\Controller\\CroquetteController::list' => ['privates', '.service_locator.vRUAr7Q', 'get_ServiceLocator_VRUAr7QService', true],
            'App\\Controller\\CroquetteController::showByBrand' => ['privates', '.service_locator.vRUAr7Q', 'get_ServiceLocator_VRUAr7QService', true],
            'App\\Controller\\CroquetteController::showOne' => ['privates', '.service_locator.vRUAr7Q', 'get_ServiceLocator_VRUAr7QService', true],
            'App\\Controller\\ExceptionController::catchException' => ['privates', '.service_locator.4elymRc', 'get_ServiceLocator_4elymRcService', true],
            'App\\Controller\\SecurityController::delete' => ['privates', '.service_locator.OVKq5do', 'get_ServiceLocator_OVKq5doService', true],
            'App\\Controller\\SecurityController::register' => ['privates', '.service_locator.Mhqdd2r', 'get_ServiceLocator_Mhqdd2rService', true],
            'App\\Controller\\SecurityController::reset' => ['privates', '.service_locator.Mhqdd2r', 'get_ServiceLocator_Mhqdd2rService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'App\\Controller\\AnalyseController:analyseAll' => ['privates', '.service_locator.vRUAr7Q', 'get_ServiceLocator_VRUAr7QService', true],
            'App\\Controller\\AnalyseController:analyseOne' => ['privates', '.service_locator.vRUAr7Q', 'get_ServiceLocator_VRUAr7QService', true],
            'App\\Controller\\BrandController:index' => ['privates', '.service_locator.nMP20_1', 'get_ServiceLocator_NMP201Service', true],
            'App\\Controller\\CroquetteController:list' => ['privates', '.service_locator.vRUAr7Q', 'get_ServiceLocator_VRUAr7QService', true],
            'App\\Controller\\CroquetteController:showByBrand' => ['privates', '.service_locator.vRUAr7Q', 'get_ServiceLocator_VRUAr7QService', true],
            'App\\Controller\\CroquetteController:showOne' => ['privates', '.service_locator.vRUAr7Q', 'get_ServiceLocator_VRUAr7QService', true],
            'App\\Controller\\ExceptionController:catchException' => ['privates', '.service_locator.4elymRc', 'get_ServiceLocator_4elymRcService', true],
            'App\\Controller\\SecurityController:delete' => ['privates', '.service_locator.OVKq5do', 'get_ServiceLocator_OVKq5doService', true],
            'App\\Controller\\SecurityController:register' => ['privates', '.service_locator.Mhqdd2r', 'get_ServiceLocator_Mhqdd2rService', true],
            'App\\Controller\\SecurityController:reset' => ['privates', '.service_locator.Mhqdd2r', 'get_ServiceLocator_Mhqdd2rService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
        ], [
            'App\\Controller\\AnalyseController::analyseAll' => '?',
            'App\\Controller\\AnalyseController::analyseOne' => '?',
            'App\\Controller\\BrandController::index' => '?',
            'App\\Controller\\CroquetteController::list' => '?',
            'App\\Controller\\CroquetteController::showByBrand' => '?',
            'App\\Controller\\CroquetteController::showOne' => '?',
            'App\\Controller\\ExceptionController::catchException' => '?',
            'App\\Controller\\SecurityController::delete' => '?',
            'App\\Controller\\SecurityController::register' => '?',
            'App\\Controller\\SecurityController::reset' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\AnalyseController:analyseAll' => '?',
            'App\\Controller\\AnalyseController:analyseOne' => '?',
            'App\\Controller\\BrandController:index' => '?',
            'App\\Controller\\CroquetteController:list' => '?',
            'App\\Controller\\CroquetteController:showByBrand' => '?',
            'App\\Controller\\CroquetteController:showOne' => '?',
            'App\\Controller\\ExceptionController:catchException' => '?',
            'App\\Controller\\SecurityController:delete' => '?',
            'App\\Controller\\SecurityController:register' => '?',
            'App\\Controller\\SecurityController:reset' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]);
    }
}
